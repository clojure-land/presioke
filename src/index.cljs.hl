(page "index.html")

(defn flickr
  "Invokes the flickr API method with params and calls the success
  function."
  [method params success]
  (->> {"type" "GET"
        "url" "http://api.flickr.com/services/rest/"
        "data" (merge params {"method" method, "format" "json"})
        "jsonpCallback" "jsonFlickrApi"
        "dataType" "jsonp"
        "success" (comp success js->clj)}
       clj->js
       (.ajax js/jQuery)))

(defn image-url
  "Converts a flickr image response map into an image URL."
  [{:strs [farm server id secret]}]
  (str "http://farm" farm ".staticflickr.com/" server "/" id "_" secret ".jpg"))

(defc  images        ["http://www.auburn.edu/~burnsma/peopl96a.gif"])
(defc  cursor        0)
(defc= ready?        (> (dec (count images)) cursor))
(defc= current-image (nth images cursor))
(defc= next-image    (and ready? (nth images (inc cursor))))
(defc= splash?       (and ready? (zero? cursor)))
(defc= location      (if ready? (str (inc cursor) "/" (count images)) "Loading..."))

(defn add-handlers! []
  (doto (js/jQuery "html")
    (.on "keyup" (fn [e]
                   (if (= (.-keyCode e) 8)
                     (swap! cursor #(if (pos? %) (dec %) %))
                     (swap! cursor inc))))
    (.on "click" #(swap! cursor inc))))

(defn fetch! []
  (flickr "flickr.interestingness.getList"
          {"api_key" "d4fbe84122c1fb2c58dcdd974f5e46ef", "per_page" 500}
          #(swap! images concat (map image-url (get-in % ["photos" "photo"])))))

(add-initfn! #(do (add-handlers!) (fetch!)))

(html
 (head
   (title "Presioke â€¢ Presentation Party Game")
   (link :rel "stylesheet" :href "screen.css"))
 (body
  (div :class "current_image"
       :css (cell= {:background      (str "url(" current-image ")")
                    :background-size "cover"}))
  (img :class "prefetch" :src next-image)
  (span :class "page_marker" :text location)
  (span :class "helper_text"
        :slide-toggle splash?
        :text (cell= (if splash? "Press a key or click the mouse for a new image. Hit backspace to go back a slide.")))))
